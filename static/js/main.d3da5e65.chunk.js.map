{"version":3,"sources":["wsb.svg","functions.js","components/stockcount.jsx","components/button.jsx","components/navbar.jsx","components/networth.jsx","components/cash.jsx","components/stock.jsx","components/stockgraph.jsx","components/networthgraph.jsx","components/graph.jsx","App.js","reportWebVitals.js","index.js"],"names":["formatDollar","num","formatted","Math","round","Number","EPSILON","toFixed","changePrice","oldPrice","volatility","change_percent","random","newPrice","StockCount","type","className","this","getButtonClasses","props","stockCount","checkPlural","classes","Component","Button","onClick","onSell","onBuy","onStart","onPause","option","stockPrice","cash","NavBar","Fragment","NetWorth","netWorth","Cash","Stock","onFluctuate","price","StockGraph","options","series","width","NetWorthGraph","Graph","state","stockGraph","chart","id","toolbar","show","xaxis","categories","labels","axisBorder","color","height","offsetX","offsetY","axisTicks","borderType","tickAmount","undefined","tickPlacement","min","max","range","floating","position","title","text","style","fontSize","fontFamily","fontWeight","cssClass","crosshairs","opacity","stroke","dashArray","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","dropShadow","enabled","top","left","blur","tooltip","formatter","netWorthGraph","netSeries","App","name","data","start","interval","setInterval","handleFluctuate","pause","clearInterval","handleBuy","setState","handleSell","stockHistory","push","netWorthHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3da5e65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wsb.edcc32f6.svg\";","export function formatDollar(num) {\n  let formatted = Math.round((num + Number.EPSILON) * 100) / 100;\n  formatted = +formatted.toFixed(2);\n  return formatted;\n}\n\nexport function changePrice(oldPrice, volatility) {\n  let rnd = Math.random(); // generate number, 0 <= x < 1.0\n  let change_percent = 2 * volatility * rnd;\n  if (change_percent > volatility) change_percent -= 2 * volatility;\n  let change_amount = oldPrice * change_percent;\n  let newPrice = formatDollar(oldPrice + change_amount);\n  if (newPrice < 0) newPrice = 0.0;\n  return newPrice;\n}\n","import React, { Component } from \"react\";\n\nclass StockCount extends Component {\n  render() {\n    return (\n      <button type=\"button\" className={this.getButtonClasses()}>\n        You own{\" \"}\n        <span className=\"badge bg-dark bg-lg\">{this.props.stockCount}</span>\n        {\" \" + this.checkPlural()}\n      </button>\n    );\n  }\n\n  checkPlural() {\n    if (this.props.stockCount <= 1) return \"stock\";\n    return \"stocks\";\n  }\n\n  getButtonClasses() {\n    let classes = \"btn \";\n    if (this.props.stockCount <= 0) {\n      classes += \" btn-secondary\";\n    } else classes += \" btn-success\";\n\n    return classes;\n  }\n}\n\nexport default StockCount;\n","import React, { Component } from \"react\";\nimport StockCount from \"./stockcount\";\n\nclass Button extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"col-centered\">\n          <button\n            onClick={() => this.props.onSell()}\n            className={this.getButtonClasses(\"sell\")}\n          >\n            SELL\n          </button>\n\n          <StockCount stockCount={this.props.stockCount} />\n\n          <button\n            onClick={() => this.props.onBuy()}\n            className={this.getButtonClasses(\"buy\")}\n          >\n            BUY\n          </button>\n        </div>\n        <div className=\"col-centered\">\n          <button\n            onClick={() => this.props.onStart()}\n            className={this.getButtonClasses(\"start\")}\n          >\n            Start Game\n          </button>\n\n          <button\n            onClick={() => this.props.onPause()}\n            className={this.getButtonClasses(\"pause\")}\n          >\n            Pause\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  getButtonClasses(option) {\n    let classes = \"\";\n    if (option == \"sell\") {\n      classes = \"btn btn-danger btn-lg m-3\";\n      if (this.props.stockCount <= 0) classes += \" disabled\";\n    } else if (option == \"buy\") {\n      classes = \"btn btn-success btn-lg m-3\";\n      if (this.props.stockPrice > this.props.cash) classes += \" disabled\";\n    } else if (option == \"pause\") {\n      classes = \"btn btn-warning btn-md m-5\";\n    } else {\n      classes = \"btn btn-primary btn-md m-5\";\n    }\n\n    return classes;\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-dark bg-warning\">\n          <div>\n            <span className=\"navbar-brand mb-0 h1\">\n              &nbsp; Stonks Only Go Up\n            </span>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass NetWorth extends Component {\n  render() {\n    return (\n      <button type=\"button\" className=\"btn btn-outline-primary btn-lg m-4\">\n        Net Worth\n        <span className=\"badge rounded-pill bg-warning m-1\">\n          {\" $\" + this.props.netWorth}\n        </span>\n      </button>\n    );\n  }\n}\n\nexport default NetWorth;\n","import React, { Component } from \"react\";\n\nclass Cash extends Component {\n  render() {\n    return (\n      <button type=\"button\" className=\"btn btn-outline-primary btn-lg m-2\">\n        Cash\n        <span className=\"badge rounded-pill bg-warning m-1\">\n          {\" $\" + this.props.cash}\n        </span>\n      </button>\n    );\n  }\n}\n\nexport default Cash;\n","import React, { Component } from \"react\";\n\nclass Stock extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-primary btn-lg m-4\"\n        onClick={() => this.props.onFluctuate()}\n      >\n        Stock Price\n        <span className=\"badge rounded-pill bg-warning m-1\">\n          {\" $\" + this.props.price}\n        </span>\n      </button>\n    );\n  }\n}\n\nexport default Stock;\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass StockGraph extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.props.options}\n              series={this.props.series}\n              type=\"line\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StockGraph;\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass NetWorthGraph extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.props.options}\n              series={this.props.series}\n              type=\"line\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NetWorthGraph;\n","import React, { Component } from \"react\";\nimport StockGraph from \"./stockgraph\";\nimport NetWorthGraph from \"./networthgraph\";\nimport \"../App.css\";\n\nclass Graph extends Component {\n  state = {\n    stockGraph: {\n      options: {\n        chart: {\n          id: \"basic-line\",\n          toolbar: {\n            show: false,\n          },\n        },\n        xaxis: {\n          type: \"numeric\",\n          categories: [],\n          labels: {\n            show: false,\n          },\n          axisBorder: {\n            show: true,\n            color: \"#78909C\",\n            height: 1,\n            width: \"100%\",\n            offsetX: 0,\n            offsetY: 0,\n          },\n          axisTicks: {\n            show: true,\n            borderType: \"solid\",\n            color: \"#78909C\",\n            height: 10,\n            offsetX: 0,\n            offsetY: 0,\n          },\n          tickAmount: undefined,\n          tickPlacement: \"between\",\n          min: undefined,\n          max: undefined,\n          range: undefined,\n          floating: false,\n          position: \"bottom\",\n          title: {\n            text: \"Stock Price\",\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              color: undefined,\n              fontSize: \"12px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 600,\n              cssClass: \"apexcharts-xaxis-title\",\n            },\n          },\n          crosshairs: {\n            show: true,\n            width: 1,\n            position: \"back\",\n            opacity: 0.9,\n            stroke: {\n              color: \"#b6b6b6\",\n              width: 0,\n              dashArray: 0,\n            },\n            fill: {\n              type: \"solid\",\n              color: \"#B1B9C4\",\n              gradient: {\n                colorFrom: \"#D8E3F0\",\n                colorTo: \"#BED1E6\",\n                stops: [0, 100],\n                opacityFrom: 0.4,\n                opacityTo: 0.5,\n              },\n            },\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 1,\n              opacity: 0.4,\n            },\n          },\n          tooltip: {\n            enabled: true,\n            formatter: undefined,\n            offsetY: 0,\n            style: {\n              fontSize: 0,\n              fontFamily: 0,\n            },\n          },\n        },\n      },\n    },\n\n    netWorthGraph: {\n      options: {\n        chart: {\n          id: \"basic-line\",\n          toolbar: {\n            show: false,\n          },\n        },\n        xaxis: {\n          type: \"numeric\",\n          categories: [],\n          labels: {\n            show: false,\n          },\n          axisBorder: {\n            show: true,\n            color: \"#78909C\",\n            height: 1,\n            width: \"100%\",\n            offsetX: 0,\n            offsetY: 0,\n          },\n          axisTicks: {\n            show: true,\n            borderType: \"solid\",\n            color: \"#78909C\",\n            height: 10,\n            offsetX: 0,\n            offsetY: 0,\n          },\n          tickAmount: undefined,\n          tickPlacement: \"between\",\n          min: undefined,\n          max: undefined,\n          range: undefined,\n          floating: false,\n          position: \"bottom\",\n          title: {\n            text: \"Net Worth\",\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              color: undefined,\n              fontSize: \"12px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 600,\n              cssClass: \"apexcharts-xaxis-title\",\n            },\n          },\n          crosshairs: {\n            show: true,\n            width: 1,\n            position: \"back\",\n            opacity: 0.9,\n            stroke: {\n              color: \"#b6b6b6\",\n              width: 0,\n              dashArray: 0,\n            },\n            fill: {\n              type: \"solid\",\n              color: \"#B1B9C4\",\n              gradient: {\n                colorFrom: \"#D8E3F0\",\n                colorTo: \"#BED1E6\",\n                stops: [0, 100],\n                opacityFrom: 0.4,\n                opacityTo: 0.5,\n              },\n            },\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 1,\n              opacity: 0.4,\n            },\n          },\n          tooltip: {\n            enabled: true,\n            formatter: undefined,\n            offsetY: 0,\n            style: {\n              fontSize: 0,\n              fontFamily: 0,\n            },\n          },\n        },\n      },\n    },\n  };\n\n  render() {\n    return (\n      <div className=\"rowC col-centered\">\n        <StockGraph\n          options={this.state.stockGraph.options}\n          series={this.props.series}\n        />\n        <NetWorthGraph\n          options={this.state.netWorthGraph.options}\n          series={this.props.netSeries}\n        />\n      </div>\n    );\n  }\n}\nexport default Graph;\n","import logo from \"./wsb.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { changePrice, formatDollar } from \"./functions.js\";\nimport Button from \"./components/button\";\nimport NavBar from \"./components/navbar\";\nimport NetWorth from \"./components/networth\";\nimport Cash from \"./components/cash\";\nimport Stock from \"./components/stock\";\nimport Graph from \"./components/graph\";\n\nclass App extends Component {\n  state = {\n    netWorth: 100,\n    cash: 100,\n    price: 5,\n    stockCount: 0,\n\n    stockGraph: {\n      series: [\n        {\n          name: \"Price History\",\n          data: [10],\n        },\n      ],\n    },\n\n    netWorthGraph: {\n      series: [\n        {\n          name: \"Net Worth History\",\n          data: [100],\n        },\n      ],\n    },\n  };\n\n  start = () => {\n    this.interval = setInterval(() => this.handleFluctuate(), 500);\n  };\n  pause = () => {\n    clearInterval(this.interval);\n  };\n\n  handleBuy = () => {\n    let cash = this.state.cash;\n    let price = this.state.price;\n    let stockCount = this.state.stockCount;\n\n    if (cash >= price) {\n      cash = formatDollar(cash - price);\n      stockCount++;\n\n      this.setState({\n        cash,\n        stockCount,\n      });\n    }\n  };\n\n  handleSell = () => {\n    let cash = this.state.cash;\n    let price = this.state.price;\n    let stockCount = this.state.stockCount;\n\n    if (stockCount >= 1) {\n      cash = formatDollar(cash + price);\n      stockCount--;\n      let netWorth = formatDollar(cash + stockCount * price);\n\n      this.setState({\n        netWorth,\n        cash,\n        stockCount,\n      });\n    }\n  };\n\n  handleFluctuate = () => {\n    let cash = this.state.cash;\n    let price = this.state.price;\n    let stockCount = this.state.stockCount;\n    let volatility = 0.1;\n\n    price = changePrice(price, volatility);\n    let netWorth = formatDollar(cash + stockCount * price);\n\n    let series = this.state.stockGraph.series[0];\n    let stockHistory = [...series.data];\n    stockHistory.push(price);\n    series = this.state.netWorthGraph.series[0];\n    let netWorthHistory = [...series.data];\n    netWorthHistory.push(netWorth);\n\n    this.setState({\n      netWorth,\n      price,\n\n      stockGraph: {\n        series: [{ data: stockHistory }],\n      },\n\n      netWorthGraph: {\n        series: [{ data: netWorthHistory }],\n      },\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <div className=\"col-centered\">\n          <NetWorth netWorth={this.state.netWorth} />\n          <Cash cash={this.state.cash} />\n          <Stock price={this.state.price} onFluctuate={this.handleFluctuate} />\n        </div>\n        <div>\n          <Graph\n            series={this.state.stockGraph.series}\n            netSeries={this.state.netWorthGraph.series}\n          />\n        </div>\n        <div>\n          <Button\n            onBuy={this.handleBuy}\n            onSell={this.handleSell}\n            onStart={this.start}\n            onPause={this.pause}\n            stockCount={this.state.stockCount}\n            cash={this.state.cash}\n            stockPrice={this.state.price}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n//        labels: this.props.priceHistory.map((price) => 0),\n//        StockGraph graph={this.state.stockGraph} /\n//<Graph graph={this.state.stockGraph} data={this.state.history}/>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}